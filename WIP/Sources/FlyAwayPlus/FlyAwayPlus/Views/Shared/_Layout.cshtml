@using FlyAwayPlus.Models
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Fly Away Plus</title>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/modernizr")
    @Styles.Render("~/Content/css")
</head>
<body style="min-height: 768px;">
    <div class="se-pre-con">
    </div>
    @if (Session["authenicated"] == null || Session["authenicated"].ToString().IsEmpty())
    {
        <img src="/Images/background.jpg" style="width:100%; height:100%" />
    }
    <script>
        $(window).load(function () {
            // Animate loader off screen
            $(".se-pre-con").fadeOut("slow");

            var login = '@Session["authenicated"]';
            if (login == 'null' || login.length == 0) {
                $("#login-modal").modal("show");
            }
        });
    </script>
    <div class="navbar navbar-custom" role="navigation">
        <div class="container">
            <div class="navbar-header">
                <a href="/Home/" class="navbar-brand">
                    <img src="/Images/FAP logo.png" alt="FAP" height="40" />
                </a>
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav navbar-right">
                    @if (Session["authenicated"] == null || Session["authenicated"].ToString().IsEmpty())
                    {
                        <li><a style="display:none" class="navbar-right interact-item remove-background" data-toggle="modal" data-target="#login-modal">Login/Sign Up</a></li>
                    }
                    else
                    {
                        <li class="friend-request-li">
                            <a href="javascript:;" class="remove-background" id="id-btn-friend-request">
                                <i class="fa fa-fw fa-user-plus interact-item interact-button"></i>
                                <span class="friend-request-count badge badge-danger" style="display: none;"></span>
                            </a>
                            <div class="friend-request-container">
                                <div class="friend-request-title">
                                    Friend Request
                                </div>
                                <hr />
                                <div id="idFriendRequest" class="friend-request friend-request-body" style="min-height:200px; max-height: 200px; overflow-y: auto; overflow-x: hidden; padding-top: 5px!important;">
                                </div>
                                <div class="friend-request-footer">
                                </div>
                            </div>
                        </li>
                        <li class="notification-li">
                            <a href="javascript:;" class="remove-background" id="btn-notification">
                                <i class="fa fa-fw fa-bell interact-item interact-button"></i>
                                <span class="notification-count badge badge-danger"></span>
                            </a>

                            <div class="notification-container">
                                <div class="notification-title">
                                    Notifications
                                </div>
                                <hr />
                                <div id="idNotification" class="notifications notifications-body" style="min-height:200px; max-height: 200px; overflow-y: auto; overflow-x: hidden; padding-top: 5px!important;">
                                </div>
                                <div class="notification-footer">
                                    <a href="javascript:;"></a>
                                </div>
                            </div>
                        </li>
                        <li style="height: 53px">
                            <a data-toggle="dropdown" class="dropdown-toggle interact-item remove-background">
                                <img id="id-avatar-current-user" 
                                     src="@(string.IsNullOrEmpty(Session["userAva"] + string.Empty) ? "/Images/UIHelper/default-avatar.jpg" : @Session["userAva"].ToString().Replace("//","/"))"
                                     alt="@Session["username"]"
                                     class="avatar" />
                                <b class="caret"></b>
                            </a>
                            <ul class="dropdown-menu bullet pull-center" style="left: -45px;">
                                <li><a href="/User/Index/@Session["UserId"]" id="curent-user-id">@Session["username"]</a></li>
                                <li><a href="/Login/Logout">Log out</a></li>
                            </ul>
                        </li>
                    }
                </ul>

                @if (Session["authenicated"] != null && !Session["authenicated"].ToString().IsEmpty())
                {
                    using (Html.BeginForm("Search", "Search", FormMethod.Get, new { @class = "nav nav-bar navbar-left" }))
                    {
                        <div class="nav-search-wrapper">
                            <div class="search-bar">
                                <input type="text"
                                       name="keyword"
                                       id="id-search-input"
                                       value="Search for places, tour rooms, people..." onfocus="this.value = '';" onblur="    if (this.value === '') { this.value = 'Search for places, tour rooms, people...'; }">
                                <input type="submit" value="Search" />
                            </div>
                        </div>
                    }

                    @Html.Partial("_PostPartial")
                }
            </div>
        </div>
    </div>
    @Scripts.Render("~/bundles/bootstrap")
    @if (Session["authenicated"] != null && !Session["authenicated"].ToString().IsEmpty())
    {
        <script src="http://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&signed_in=true&libraries=places"></script>
        @Html.Partial("_TagFriendPartial")
        if (Session["authenicated"] != null && !Session["authenicated"].ToString().IsEmpty())
        {
            @Html.Partial("_ChatConversation")
        }
    }
    else
    {
        @Html.Action("LoginPartial", "Login")
    }
    <div id="id-main-page" class="container body-content">
        @RenderBody()
        <br />

    </div>
    @if (Session["authenicated"] != null && !Session["authenicated"].ToString().IsEmpty())
    {
        @RenderSection("scripts", required: false)
        @Scripts.Render("~/bundles/js")
        <script src="/signalr/hubs"></script>
        <script src="http://www.youtube.com/player_api"></script>

        <link href="~/Content/tooltipster.css" rel="stylesheet" />
        <script src="~/Scripts/jquery.tooltipster.js"></script>
        <script>
            $(function () {
                // Hover card on username.
                initializeTooltip();

                $(document).on('click', '.add-friend-btn', function () {
                    var currentUserId = $('#curent-user-id').attr('href');
                    currentUserId = currentUserId.substr(12, currentUserId.length - 12);

                    var otherUserId = $(this).parent().parent().find('a').attr('href');
                    otherUserId = otherUserId.substr(12, otherUserId.length - 12);

                    var data = {
                        userId: currentUserId,
                        otherUserId: otherUserId
                    };

                    if ($(this).text() === 'Add friend') {
                        $(this).css('background-color', '#2DCC70').text('Friend request sent');
                        commonModule.callAjax("/User/CancelRequestFriend/", data, null);
                    } else {
                        if (currentUserId === otherUserId) {
                            $(this).css('background-color', '#3bafda').text('This is you!');
                        } else {
                            $(this).css('background-color', '#3bafda').text('Add friend');
                        }

                        if ($(this).text() === 'Friend request sent') {
                            commonModule.callAjax("/User/SendRequestFriend/", data, null);
                        } else if ($(this).text() === 'Unfriend') {
                            commonModule.callAjax("/User/Unfriend/", data, null);
                        }
                    }
                });
                $("#btn-notification").click(function () {
                    $(".notification-container").fadeToggle(300);
                    $(".notification-count").fadeOut("slow");
                    return false;
                });

                $("#id-search-input").keydown(function (evt) {
                    if (evt.keyCode == 13) {
                        if ($(this).val().trim().length != 0) {
                            //alert("y");
                            $(this).val($(this).val().trim());
                            $(this).closest("form").submit();
                        }
                        evt.preventDefault();
                    }
                });

                $("#id-btn-friend-request").click(function () {
                    $(".friend-request-container").fadeToggle(300);
                    $(".friend-request-count").fadeOut("slow");
                    return false;
                });

                $(document).click(function (e) {
                    $(".notification-container").hide();
                    $(".friend-request-container").hide();
                });

                var lastActivityId = 0;
                var notificationHubProxy = $.connection.notificationHub;
                var friendHubProxy = $.connection.friendHub;

                friendHubProxy.client.receiveListFriendRequest = function (content) {
                    /*
                    <div style="width:100%; height: 65px;">
                        <div href="javascript:;" style="padding: 7px 7px 8px 10px; width:100%; height: 100%;">
                            <div style="float:left">
                                <span class="avatar" style="margin-right: 8px; background-image: url('/Images/UIHelper/default-avatar.jpg'); background-repeat: no-repeat; height: 50px; width: 50px;"></span>
                            </div>
                            <div style="">Duc FiLan sent request friend to you</div>
                            <div class="">
                                <button type="button" class="btn btn-success">Accept</button>
                                <button type="button" class="btn btn-danger">Declare</button>
                            </div>
                        </div>
                    </div>
                    <hr />
                    */
                    content = JSON.parse(content);
                    var count = 0;
                    for (var index = 0; index < content.length; index++) {
                        var friend = content[index];
                        if (friend == null) {
                            break;
                        }
                        count++;
                        var tmp = "";
                        tmp += "<div class='cls-friend-request' style='width:100%; height: 65px;'>";
                        tmp += "<div href='#' style='padding: 7px 7px 8px 10px; width:100%; height: 100%;'>";
                        tmp += "<div style='float:left'>";
                        tmp += "<span class='avatar' style='margin-right: 8px; background-image: url(\"" + friend["Avatar"] + "\"); background-repeat: no-repeat; height: 50px; width: 50px;'></span>";
                        tmp += "</div>";
                        tmp += "<div style=''>" + friend["FirstName"] + " " + friend["LastName"] + " sent request friend to you</div>";
                        tmp += "<div class=''>";
                        tmp += "<button type='button' id='id-btn-friend-accept" + friend["UserId"] + "' class='btn btn-success'>Accept</button>";
                        tmp += "<button type='button' id='id-btn-friend-decline" + friend["UserId"] + "' class='btn btn-danger' style='margin-left:5px;'>Decline</button>";
                        tmp += "</div>";
                        tmp += "</div>";
                        tmp += "</div>";
                        tmp += "<hr />";
                        $("#idFriendRequest").append(tmp);

                        $("#id-btn-friend-accept" + friend["UserId"]).click(function (evt) {
                            var controller = "/User/AddFriend";
                            var data = {
                                userID: parseInt('@Session["UserId"]'),
                                otherUserID: friend["UserId"]
                            };

                            commonModule.callAjax(controller, data, null);

                            $(this).closest(".cls-friend-request").remove();
                            evt.preventDefault();
                        });

                        $("#id-btn-friend-decline" + friend["UserId"]).click(function (evt) {
                            var controller = "/User/DeclineRequestFriend";
                            var data = {
                                userId: friend["UserId"],
                                otherUserId: parseInt('@Session["UserId"]')
                            };

                            commonModule.callAjax(controller, data, null);
                            $(this).closest(".cls-friend-request").remove();
                            evt.preventDefault();
                        });
                    }
                    if (count > 0) {
                        $("#id-btn-friend-request").find("span").text(count);
                        $("#id-btn-friend-request").find("span").show();
                    }
                    else {
                        $("#id-btn-friend-request").find("span").hide();
                    }
                }

                notificationHubProxy.client.receiveNotification = function (content) {
                    /*
                    <div style="width:100%; height: 65px;">
                        <a href="javascript:;" style="padding: 7px 7px 8px 10px; width:100%; height: 100%;">
                            <div style="float:left">
                                <span class="avatar" style="margin-right: 8px; background-image: url('/Images/UIHelper/default-avatar.jpg'); background-repeat: no-repeat; height: 50px; width: 50px;"></span>
                            </div>
                            <div style="">Duc FiLan liked your post</div>
                        </a>
                    </div>
                    <hr />
                    */
                    content = JSON.parse(content);
                    var notification_count = 0;
                    for (var index = 0; index < content.length; index++) {
                        var notification = content[index];
                        if (notification == null || notification["post"] == null || notification["user"] == null) {
                            break;
                        }
                        notification_count++;
                        var tmp = "";
                        tmp += "<div class='divNotification' style='width:100%; height: 65px;'>";
                        tmp += "<a href='/Post/Index/" + notification["post"]["PostId"] + "' style='padding: 7px 7px 8px 10px; width:100%; height: 100%;'>";
                        tmp += "<div style='float:left'>";
                        tmp += "<span class='avatar' style='margin-right: 8px; background-image: url(\"" + notification["user"]["Avatar"] + "\"); background-repeat: no-repeat; height: 50px; width: 50px;'></span>";
                        tmp += "</div>";

                        if (notification["activity"] == "COMMENTED") {
                            tmp += "<div>" + notification["user"]["FirstName"] + " " + notification["user"]["LastName"] + " commented to your post</div>";
                        }
                        else if (notification["activity"] == "LIKE") {
                            tmp += "<div>" + notification["user"]["FirstName"] + " " + notification["user"]["LastName"] + " liked to your post</div>";
                        }
                        else if (notification["activity"] == "DISLIKE") {
                            tmp += "<div>" + notification["user"]["FirstName"] + " " + notification["user"]["LastName"] + " disliked to your post</div>";
                        }
                        tmp += "<div style='margin-top:5px;'> " + notification["DateCreated"] + "</div>";
                        tmp += "</a>";
                        tmp += "</div>";
                        tmp += "<hr />";
                        $("#idNotification").append(tmp);
                        lastActivityId = notification["lastActivityID"];
                    }
                    if (content.length > 0) {
                        $("#btn-notification").find(".notification-count").text(notification_count);
                    }
                    else {
                        $("#btn-notification").find(".notification-count").text("");
                    }
                }

                $.connection.hub.start().done(function () {
                    var login = '@Session["authenicated"]';
                    if (login != null && login != "") {
                        if (lastActivityId == 0) {
                            notificationHubProxy.server.loadNotification(parseInt('@Session["UserId"]'), lastActivityId);
                        }
                        friendHubProxy.server.getListFriendRequest(parseInt('@Session["UserId"]'));
                    }
                });

                $('#idNotification').bind('scroll', function (evt) {
                    var scrollPosition = $(this).scrollTop() + $(this).outerHeight();
                    var divTotalHeight = $(this)[0].scrollHeight
                        + parseInt($(this).css('padding-top'), 10)
                        + parseInt($(this).css('padding-bottom'), 10)
                        + parseInt($(this).css('border-top-width'), 10)
                        + parseInt($(this).css('border-bottom-width'), 10);
                    //console.log("scrollPosition : " + scrollPosition + ", divTotalHeight: " + divTotalHeight)
                    if (scrollPosition + 5 == divTotalHeight) {
                        $.connection.hub.start().done(function () {
                            //alert(lastActivityID);
                            notificationHubProxy.server.loadNotification(parseInt('@Session["UserId"]'), lastActivityId);
                        });
                        evt.preventDefault();
                    }
                });
            });

            function initializeTooltip() {
                $(".hover-card-user").tooltipster({
                    interactive: true,
                    content: 'Loading...',
                    contentCloning: false,
                    contentAsHTML: true,
                    arrowColor: '#3bafda',
                    functionBefore: function (origin, continueTooltip) {
                        // we'll make this function asynchronous and allow the tooltip to go ahead and show the loading notification while fetching our data.
                        continueTooltip();
                        // next, we want to check if our data has already been cached
                        if (origin.data('ajax') !== 'cached') {
                            var tooltipContent;

                            var currentUserId = $('#curent-user-id').attr('href');
                            currentUserId = currentUserId.substr(12, currentUserId.length - 12);

                            var otherUserId = origin.attr('href');
                            otherUserId = otherUserId.substr(12, otherUserId.length - 12);

                            $.when($.ajax({
                                type: 'POST',
                                url: '/User/GetUser',
                                data: { otherUserId: otherUserId }
                            }), $.ajax({
                                type: 'POST',
                                url: '/User/CountMutualFriend',
                                data: { thisUserId: currentUserId, otherUserId: otherUserId }
                            }), $.ajax({
                                type: 'POST',
                                url: '/User/CountPlaces',
                                data: { otherUserId: otherUserId }
                            }), $.ajax({
                                type: 'POST',
                                url: '/User/IsFriend',
                                data: {
                                    userId: currentUserId,
                                    otherUserId: otherUserId
                                }
                            })).done(function (otherUser, mutualFriendCount, placeCount, isFriend) {
                                tooltipContent = '<div class="hover-card"><div class="profile"><div class="avatar"><img src="' + otherUser[0].Avatar + '" alt="Avatar"></div></div><div class="information"><a href="' + origin.attr('href') + '"><div class="name-user">' + otherUser[0].FirstName + ' ' + otherUser[0].LastName + '</div></a><div class="dark-divider"></div><ul><li>';

                                tooltipContent += mutualFriendCount[0];
                                tooltipContent += ' mutual friends</li><li>' + placeCount[0] + ' places traveled</li></ul><div><div class="add-friend-btn">';
                                if (isFriend[0].toString() === 'True') {
                                    //alert('un');
                                    tooltipContent += 'Unfriend';
                                } else {
                                    //alert('ad');
                                    if (currentUserId === otherUserId) {
                                        tooltipContent += 'This is you!';
                                    } else {
                                        tooltipContent += 'Add friend';
                                    }
                                }

                                tooltipContent += '</div></div></div></div>';

                                origin.tooltipster('content', tooltipContent).data('ajax', 'cached');
                            });
                        }
                    }
                });
            }
        </script>
    }
</body>
</html>
