@foreach (var post in ViewData["listPost"] as List<FlyAwayPlus.Models.Post>)
{
    var photo = ViewData["listPhotoDict"] as Dictionary<int, FlyAwayPlus.Models.Photo>;
    var place = ViewData["listPlaceDict"] as Dictionary<int, FlyAwayPlus.Models.Place>;
    var user = ViewData["listUserDict"] as Dictionary<int, FlyAwayPlus.Models.User>;
    var dislike = ViewData["dislikeCount"] as Dictionary<int, int>;
    var like = ViewData["likeCount"] as Dictionary<int, int>;
    var comment = ViewData["commentCount"] as Dictionary<int, int>;
    var userComment = ViewData["userCommentCount"] as Dictionary<int, int>;
    var isLikeDict = ViewData["isLikeDict"] as Dictionary<int, bool>;
    var isDislikeDict = ViewData["isDislikeDict"] as Dictionary<int, bool>;
    var isWishDict = ViewData["isWishDict"] as Dictionary<int, bool>;

    string btnWishClass = isWishDict[post.postID] ? "btn-warning" : "btn-primary";
    string btnLikeClass = isLikeDict[post.postID] ? "btn-warning" : "btn-primary";
    string btnDislikeClass = isDislikeDict[post.postID] ? "btn-warning" : "btn-primary";

    string btnLikeIconClass = isLikeDict[post.postID] ? "interacted fa-thumbs-up" : "";
    string btnDislikeIconClass = isDislikeDict[post.postID] ? "interacted fa-thumbs-down" : "";
    
    <div class="white-panel">
        <div class="dark-wrapper">
            <img src="@(photo[post.postID].url.StartsWith("http") ? "" : "/Images/UserUpload/")@photo[post.postID].url" alt="ALT">
            <ul class="post-actions" style="padding-left:0px;">
                <li>
                    <a href="#" role="@post.postID" class="btn @btnWishClass btn-circle btn-lg btn-plus" style="margin-right:20px;"><i class="glyphicon glyphicon-plus"></i></a>
                </li>
                <li>
                    <a href="#" role="@post.postID" class="btn @btnLikeClass btn-circle btn-lg btn-like" style="margin-right:20px;"><i class="glyphicon glyphicon-thumbs-up"></i></a>
                </li>
                <li>
                    <a href="#" role="@post.postID" class="btn @btnDislikeClass btn-circle btn-lg btn-dislike" style="margin-right:20px;"><i class="glyphicon glyphicon-thumbs-down"></i></a>
                </li>
            </ul>
        </div>
        <div class="panel-content-wrapper">
            <h1>
                <a href="/Post/Index/@post.postID">
                    <i class="fa fa-map-marker"></i>&nbsp; @place[post.postID].name
                </a>
            </h1>
            @if (!string.IsNullOrEmpty(post.content))
            {
                <div class="divider"></div>
                <p>@post.content</p>
            }

            <div class="user-interacted-area">
                <i class="fa fa-thumbs-o-up @btnLikeIconClass"></i>&nbsp;<b class="like-count">@like[post.postID]</b>&nbsp;
                <i class="fa fa-thumbs-o-down @btnDislikeIconClass"></i>&nbsp;<b class="dislike-count">@dislike[post.postID]</b>&nbsp;
                <i class="fa fa-comment-o"></i>&nbsp;@comment[post.postID]&nbsp;
                <i class="fa fa-group"></i>&nbsp;@userComment[post.postID]
            </div>
            <div class="divider"></div>
            <div class="user-info">
                <img src="@user[post.postID].avatar" alt="@String.Format("{0} {1}", user[post.postID].firstName, user[post.postID].lastName)" class="avatar" style="width:35px; height:35px;" />
                <div>
                    <a href="/User/Index/@user[post.postID].userID">
                        <div class="name-user">@String.Format("{0} {1}", user[post.postID].firstName, user[post.postID].lastName)</div>
                    </a>
                    <div class="post-time">@post.toRealtime()</div>
                </div>
            </div>
        </div>
    </div>
}

<script>
    var isLoadMore = '@ViewData["isLoadMore"].ToString()';
    var typePost = '@ViewData["typePost"].ToString()';

    
</script>
