
<script src="~/Scripts/jquery.form.min.js"></script>
<script src="~/Scripts/jquery.Jcrop.min.js"></script>
<script src="~/Scripts/site.avatar.js"></script>

<link href="~/Content/jquery.Jcrop.min.css" rel="stylesheet" />
<link href="~/Content/Site.avatar.css" rel="stylesheet" />

@model FlyAwayPlus.Models.User

@{
    string registerBtnClass = string.IsNullOrEmpty(Session["registerMessageError"] + "") ? "" : "active";
    string loginBtnClass = string.IsNullOrEmpty(Session["registerMessageError"] + "") ? "active" : "";
    string registerFormClass = string.IsNullOrEmpty(Session["registerMessageError"] + "") ? "none" : "block";
    string loginFormClass = string.IsNullOrEmpty(Session["registerMessageError"] + "") ? "block" : "none";
}
<div id="login-modal" style="margin-top: 30px;" data-backdrop="static" data-keyboard="false" class="modal fade" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog login-modal-wrap">
        <div class="modal-content">
            <div class="modal-body login-modal-body">
                <div class="panel-login">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-6">
                                <a href="javascript:;" class="@loginBtnClass" id="login-form-link">Login</a>
                            </div>
                            <div class="col-xs-6">
                                <a href="javascript:;" class="@registerBtnClass" id="register-form-link">Register</a>
                            </div>
                        </div>
                        <hr>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-lg-12">
                                <form style="display: @loginFormClass;" role="form" method="post" id="login-form" action="/Login/Login" novalidate="novalidate">
                                    <div class="social-box">
                                        <div class="row mg-btm">
                                            <div class="col-md-12">
                                                <a class="btn btn-primary btn-block" href="/Login/AuthenFacebook">
                                                    <i class="fa fa-facebook"></i> &nbsp;&nbsp;&nbsp;Login with Facebook
                                                </a>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-12">
                                                <a class="btn btn-danger btn-block" href="/Login/AuthenGoogle">
                                                    <i class="fa fa-google"></i> &nbsp;&nbsp;&nbsp;Login with Google&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                </a>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @if (!string.IsNullOrEmpty(Session["loginMessageError"] + ""))
                                        {
                                            <span style="color: red; font-size: 15px; margin-left: 10px;">@Session["loginMessageError"]</span>
                                        }
                                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", id = "id_login_email", placeholder = "Email Address", tabindex = "1", type = "email" } })
                                        @Html.ValidationMessageFor(model => model.email, String.Empty, new { @class = "help-inline", @style = "color:red" })
                                    </div>
                                    <div class="form-group">
                                        @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", id = "id_login_password", placeholder = "Password", tabindex = "2", type = "password" } })
                                        @Html.ValidationMessageFor(model => model.password, String.Empty, new { @class = "help-inline", @style = "color:red" })
                                    </div>
                                    <div class="form-group text-center">
                                        <input type="checkbox" tabindex="3" class="" name="remember" id="remember">
                                        <label for="remember"> Remember Me</label>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-sm-6 col-sm-offset-3">
                                                <input type="submit" name="login-submit" id="login-submit" tabindex="4" class="form-control btn btn-login" value="Log In">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-lg-12">
                                                <div class="text-center">
                                                    <a href="/Login/ForgotPassword" tabindex="5" class="forgot-password">Forgot Password?</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>

                                <div id="register-form" style="display: @registerFormClass;  margin-top: -15px">
                                    <div>
                                        @{ Html.RenderPartial("~/Views/Login/UploadAvatar.cshtml"); }
                                    </div>

                                    <form role="form" method="post" id="register-form-inner" action="/Login/Register" novalidate="novalidate">
                                        @Html.ValidationSummary(true)
                                        <div class="row">
                                            <div class="col-xs-12 col-sm-6 col-md-6">
                                                <div class="form-group">
                                                    @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control", id = "id_regiser_first_name", placeholder = "First Name", tabindex = "1" } })
                                                    @Html.ValidationMessageFor(model => model.firstName, String.Empty, new { @class = "help-inline", @style = "color:red" })
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-6 col-md-6">
                                                <div class="form-group">
                                                    @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control", id = "id_register_last_name", placeholder = "Last Name", tabindex = "2" } })
                                                    @Html.ValidationMessageFor(model => model.lastName, String.Empty, new { @class = "help-inline", @style = "color:red" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-xs-12 col-sm-6 col-md-6">
                                                <div class="form-group">
                                                    @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control", id = "id_register_phone_number", placeholder = "Phone number", tabindex = "3" } })
                                                    @Html.ValidationMessageFor(model => model.phoneNumber, String.Empty, new { @class = "help-inline", @style = "color:red" })
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-6 col-md-6">
                                                <div class="form-group">
                                                    <input type="text" value="@Model.dateOfBirth" name="dateOfBirth" id="id_register_dob" class="form-control" placeholder="DOB" tabindex="4" readonly>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row" style="text-align: center">
                                            <div class="form-group">
                                                <label class="radio-inline">
                                                    @Html.RadioButtonFor(model => model.gender, "male", new { id = "id_register_male_gender" }) Male
                                                </label>
                                                <label class="radio-inline">
                                                    @Html.RadioButtonFor(model => model.gender, "female", new { id = "id_register_female_gender" }) Female
                                                </label>
                                                <label class="radio-inline">
                                                    @Html.RadioButtonFor(model => model.gender, "other", new { id = "id_register_other_gender" }) Other
                                                </label>
                                                <br />
                                                @Html.ValidationMessageFor(model => model.gender, String.Empty, new { @class = "help-inline", @style = "color:red" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control", id = "id_register_address", placeholder = "Address", tabindex = "5" } })
                                            @Html.ValidationMessageFor(model => model.address, String.Empty, new { @class = "help-inline", @style = "color:red" })
                                        </div>
                                        <div class="form-group">
                                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", id = "id_register_email", placeholder = "Email Address", tabindex = "7", type = "email" } })
                                            @Html.ValidationMessageFor(model => model.email, String.Empty, new { @class = "help-inline", @style = "color:red" })
                                        </div>
                                        <div class="row">
                                            <div class="col-xs-12 col-sm-6 col-md-6">
                                                <div class="form-group">
                                                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", id = "id_register_password", placeholder = "Password", tabindex = "8", type = "password" } })
                                                    @Html.ValidationMessageFor(model => model.password, String.Empty, new { @class = "help-inline", @style = "color:red" })
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-6 col-md-6">
                                                <div class="form-group">
                                                    @Html.EditorFor(model => model.confirmPassword, new { htmlAttributes = new { @class = "form-control", id = "id_register_password_confirmation", placeholder = "Confirm Password", tabindex = "9", type = "password" } })
                                                    @Html.ValidationMessageFor(model => model.confirmPassword, String.Empty, new { @class = "help-inline", @style = "color:red" })
                                                </div>
                                            </div>
                                        </div>
                                        @Html.EditorFor(model => model.avatar, new { htmlAttributes = new { @class = "hidden", id = "id-register-avatar-path", type = "text" } })

                                        @if (!string.IsNullOrEmpty(Session["registerMessageError"] + ""))
                                        {
                                            <span style="color: red; font-size: 15px; margin-left: 10px;">@Session["registerMessageError"]</span>
                                        }
                                    </form>
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-sm-6 col-sm-offset-3">
                                                <button id="register-submit" tabindex="10" class="form-control btn btn-register">Register Now</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/md5")
@Scripts.Render("~/bundles/datepicker")

<script>
    $(function () {
        // Datetime picker.
        $('#id_register_dob').datepicker({
            format: "yyyy-mm-dd"
        });

        //$("#")
        $("#register-submit").click(function () {
            GeneratePwd();
            $("#register-form-inner").submit();
        });
        $('#login-form-link').click(function (e) {
            $("#login-form").delay(100).fadeIn(100);
            $("#register-form").fadeOut(100);
            $('#register-form-link').removeClass('active');
            $(this).addClass('active');
            e.preventDefault();
        });
        $('#register-form-link').click(function (e) {
            $("#register-form").delay(100).fadeIn(100);
            $("#login-form").fadeOut(100);
            $('#login-form-link').removeClass('active');
            $(this).addClass('active');
            e.preventDefault();
        });
    });

    function GeneratePwd() {
        if ($("#id_register_password").val() !== "" && $("#id_register_password_confirmation").val() !== "") {
            $("#id_register_password").val(hex_md5($("#id_register_password").val()));
            $("#id_register_password_confirmation").val(hex_md5($("#id_register_password_confirmation").val()));
        }
    }
</script>


