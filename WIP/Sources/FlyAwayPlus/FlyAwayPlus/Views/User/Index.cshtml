<link href="~/Content/HomePage/grid-layout.css" rel="stylesheet" />

@model FlyAwayPlus.Models.User
@{
    ViewBag.Title = "User Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var listPhotoDict = ViewData["listPhotoDict"] as Dictionary<int, FlyAwayPlus.Models.Photo>;
    var listPlaceDict = ViewData["listPlaceDict"] as Dictionary<int, FlyAwayPlus.Models.Place>;
    var friend = ViewData["friend"] as List<FlyAwayPlus.Models.User>;
    var userSession = ViewData["userSession"] as FlyAwayPlus.Models.User;
    string friendType = ViewData["isFriend"].ToString();
}

<header>
    <figure class="profile-banner">
        <img src="/Images/background/nhatrang2.jpg" alt="Profile banner" />
    </figure>
    <figure class="profile-picture"
            style="background-image: url('@Model.avatar')">
    </figure>
    <div class="profile-stats">
        <ul role="tablist">
            <li role="presentation"><a href="#timeline" aria-controls="timeline" role="tab" data-toggle="tab">18 <span>Post</span></a></li>
            <li role="presentation"><a href="#timeline" aria-controls="timeline" role="tab" data-toggle="tab">18 <span>Places</span></a></li>
            <li role="presentation"><a href="#photos-gallery" aria-controls="photos-gallery" role="tab" data-toggle="tab">182 <span>Photos</span></a></li>
            <li role="presentation"><a href="#messages" aria-controls="messages" role="tab" data-toggle="tab">324 <span>Videos</span></a></li>
        </ul>

        <div class="interact-area">
            @if (Model.userID == userSession.userID)
            {
                <a href="#" id="idEditProfile" class="btn btn-primary pull-right" style="margin-right: 10px">Profile <i class="glyphicon glyphicon-user"></i></a>
            }
            else if (friendType.Equals("friend"))
            {
                <a href="#" id="idUnfriend" class="btn btn-primary pull-right">Unfriend <i class="glyphicon"></i></a>
                <a href="#" id="idAddfriend" class="btn btn-primary pull-right" style="display:none">Request friend</a>
                <a href="#" id="idRequestFriend" class="btn btn-primary pull-right" style="display:none">Friend request sent</a>
                <a href="#" id="idSendMessage" class="btn btn-primary pull-right" style="margin-right: 10px">Message</a>
            }
            else if (friendType.Equals("request"))
            {
                <a href="#" id="idUnfriend" class="btn btn-primary pull-right" style="display:none">Unfriend <i class="glyphicon"></i></a>
    <a href="#" id="idAddfriend" class="btn btn-primary pull-right" style="display:none">Request friend</a>
                <a href="#" id="idRequestFriend" class="btn btn-primary pull-right">Friend request sent</a>
                <a href="#" id="idSendMessage" class="btn btn-primary pull-right" style="margin-right: 10px">Message</a>
            }
            else
            {
                <a href="#" id="idUnfriend" class="btn btn-primary pull-right" style="display:none">Unfriend <i class="glyphicon"></i></a>
                <a href="#" id="idAddfriend" class="btn btn-primary pull-right">Request friend</a>
                <a href="#" id="idRequestFriend" class="btn btn-primary pull-right" style="display:none">Friend request sent</a>
                <a href="#" id="idSendMessage" class="btn btn-primary pull-right" style="margin-right: 10px">Message</a>
            }
        </div>
    </div>
    <h1>@String.Format("{0} {1} has no friends", @Model.firstName, @Model.lastName)</h1>
</header>

<div class="vertical-space-15"></div>

<!-- Friend list -->
<div class="col-md-12 frame-container">
    <div class="friend-list-header friend-title-header">
        <h6 class="text-capitalize">MY FRIENDS</h6>
    </div>

    <div class="friend-list-avatar">
        @if (friend.Count > 17)
        {
            for (int index = 0; index < 17; index++)
            {
                <div class="padding-5 col-md-2">
                    <img class="circle-image" height="50" src="@friend[index].avatar" alt="Avatar" />
                </div>
            }
        }
        else
        {
            foreach (var userFriend in friend)
            {
                <div class="padding-5 col-md-2">
                    <img class="circle-image" height="50" src="@userFriend.avatar" alt="Avatar" />
                </div>
            }
            if (friend.Count == 0)
            {
                <p>@String.Format("{0} {1} has no friends", @Model.firstName, @Model.lastName)</p>
            }
        }
    </div>
    <div class="friend-list-header view-more-friend-title">
        <h6 class="text-capitalize">VIEW ALL</h6>
    </div>
</div>

<!-- Tab panes -->
<div class="tab-content">
    <div role="tabpanel" class="tab-pane active" id="timeline">
        <div class="container">
            <div class="col-md-12">
                
                <div class="blog-landing">
                    @Html.Partial("_ListPost")
                </div>
                
                    <!--
                    <div class="timeline">
                        <dl>
                            for (int index = 0, indexPost = 0; index < timeline.Count; index++)
                            {
                                <dt>timeline[index]</dt>
                                foreach (var post in listPostDict[timeline[index]])
                                {
                                    var posPosition = (indexPost % 2 == 0) ? "pos-right" : "pos-left";
                                    var style = (indexPost % 2 == 0) ? "width: 150px; margin-left: -150px;" : "";
                                    indexPost++;

                                    <dd class="posPosition clearfix">
                                        <div class="circ"></div>
                                        <div class="time" style="style">post.toRealtime()</div>
                                        <div class="events">
                                            <div class="pull-left">
                                                <img class="events-object img-rounded" src="Model.avatar">
                                            </div>
                                            <div class="events-body">
                                                <h4 class="events-heading">listPlaceDict[post.postID].name</h4>
                                                <p>post.content</p>
                                            </div>
                                        </div>
                                    </dd>
                                }
                            }
                        </dl>
                    </div>
                    -->
            </div>
        </div>
    </div>

    <div role="tabpanel" class="tab-pane" id="photos-gallery">
        <div class="images-wrapper">
            @foreach (var image in listPhotoDict)
            {
                <div class="image-element">
                    <img src="/Images/UserUpload/@image.Value.url" class="img-zoom" alt="" />
                    <div class="dark-wrapper">
                        <ul class="post-actions" style="padding-left: 0px;">
                            <li>
                                <a href="/Images/UserUpload/@image.Value.url" rel="group"
                                   class="btn btn-primary fancybox"
                                   title="@listPlaceDict.First(p => p.Key == @image.Key).Value.name"
                                   style="width: 90px">Enlarge</a>
                            </li>
                            <li>
                                <a href="/Post/Index/@image.Key" class="btn btn-primary" style="width: 90px">View post</a>
                            </li>
                        </ul>
                    </div>
                </div>
            }
        </div>
    </div>
    <div role="tabpanel" class="tab-pane" id="messages">...</div>
    <div role="tabpanel" class="tab-pane" id="settings">...</div>
</div>

<!-- Timeline -->
<!-- Modal -->
@if (friend.Count > 17)
{
    <div class="modal fade" id="myFriend" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="margin-top: 40px">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Friend List</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        @foreach (var userFriend in friend)
                        {
                            <div class="padding-5 col-md-2">
                                <img class="circle-image" height="50" src="@userFriend.avatar" alt="Avatar" />
                                <a href="/User/Index/@userFriend.userID"><p class="small text-center">@String.Format("{0} {1}", userFriend.firstName, userFriend.lastName)</p></a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>
    var userDetailModule = (function () {
        var sendRequestFriend = function () {
            var controller = "/User/SendRequestFriend";
            var data = {
                userID: @userSession.userID,
                otherUserID: @Model.userID
                };

            commonModule.callAjax(controller, data, null);
        };

        var unfriend = function () {
            var controller = "/User/Unfriend";
            var data = {
                userID: @Model.userID,
                otherUserID: @userSession.userID
                };

            commonModule.callAjax(controller, data, null);
        };

        return {
            sendRequestFriend: sendRequestFriend,
            unfriend: unfriend
        };
    })();

    $(document).ready(function () {
        // idAddfriend
        // idUnfriend
        // idEditProfile
        // idSendMessage

        $("#idAddfriend").click(function (evt) {
            userDetailModule.sendRequestFriend();
            $(this).hide();
            $("#idRequestFriend").show();
            evt.preventDefault();
        });

        $("#idUnfriend").click(function (evt) {
            userDetailModule.unfriend();
            $(this).hide();
            $("#idAddfriend").show();
            evt.preventDefault();
        });
    });

    $(function () {
        $('a.follow').click(function () {
            $(this).toggleClass('followed');

            if ($(this).hasClass('followed')) {
                $(this).text('Request sent');
                $('.profile-stats ul li:last-child').html('325<span>Friends</span>');
            }
            else {
                $(this).text('Add friend');
                $('.profile-stats ul li:last-child').html('324<span>Friends</span>');
            }
        });

        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
            var conWidth = $("#photos-gallery").width();
            //my container width
            var gridwidth = 212;
            //alert(conWidth);
            var col = conWidth / gridwidth;
            //alert(col);
            $(".images-wrapper").BlocksIt({
                numOfCol: Math.floor(col)
            });
        });

        $(".image-element").hover(function () {
            var postActions = $(this).find(".post-actions");

            postActions.css("visibility", "visible");
            postActions.css("opacity", "1");
            postActions.animate({ top: '20px' }, "slow");
        }, function () {
            var postActions = $(this).find(".post-actions");

            postActions.animate({ top: '0px' }, "slow");
            postActions.css("visibility", "hidden");
            postActions.css("opacity", "0");
        });

        $(".fancybox").attr('rel', 'gallery').fancybox({
            openEffect: 'fade',
            closeEffect: 'elastic',
            padding: 2,
            afterLoad: function () {
                this.title = '<p class="text-center">' + this.title + '</p>';
            },
            helpers: {
                title: {
                    type: 'inside'
                },
                overlay: {
                    css: {
                        'background': 'rgba(58, 42, 45, 0.5)'
                    }
                }
            }
        });
    });

    function setBlocksit() {
        var conWidth = $(".blog-landing").width();
        //my container width
        var gridwidth = 212;
        //alert(conWidth);
        var col = conWidth / gridwidth;
        //alert(col);
        $(".blog-landing").BlocksIt({
            numOfCol: Math.floor(col),
            offsetX: 8,
            offsetY: 8
        });
    };

    function fadeImage() {
        $(".dark-wrapper").hover(function () {
            $(this).find("img").fadeTo(500, 0.5);

            var postActions = $(this).find(".post-actions");

            postActions.css("visibility", "visible");
            postActions.css("opacity", "1");
            postActions.animate({ top: '20px' }, "slow");
        }, function () {
            $(this).find("img").fadeTo(500, 1);

            var postActions = $(this).find(".post-actions");

            postActions.animate({ top: '0px' }, "slow");
            postActions.css("visibility", "hidden");
            postActions.css("opacity", "0");
        });
    };

    $(window).load(function () {
        setBlocksit();
        fadeImage();
    });

    //window resize
    $(window).resize(function () {
        setBlocksit();
    });
</script>